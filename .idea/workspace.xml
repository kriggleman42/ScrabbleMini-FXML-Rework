<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="ef97e08d-f3cf-4e22-a2fb-e25a1123c26c" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/samwilkins333/ScrabbleMini/Logic/DataStructures/Utility/PlayerList.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/samwilkins333/ScrabbleMini/Logic/DataStructures/Utility/PlayerList.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/samwilkins333/ScrabbleMini/Logic/GameAgents/Referee/Referee.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/samwilkins333/ScrabbleMini/Logic/GameAgents/Referee/Referee.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/samwilkins333/ScrabbleMini/Logic/GameAgents/Referee/StandardReferee.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/samwilkins333/ScrabbleMini/Logic/GameAgents/Referee/StandardReferee.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/samwilkins333/ScrabbleMini/Logic/GameElements/Tiles/Tile.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/samwilkins333/ScrabbleMini/Logic/GameElements/Tiles/Tile.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_DATA_SOURCES" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
    <option name="HIDDEN_KINDS">
      <set />
    </option>
    <expand />
    <select />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FxmlFile" />
        <option value="Enum" />
        <option value="Interface" />
        <option value="AnnotationType" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="1" />
  </component>
  <component name="ProjectFrameBounds">
    <option name="y" value="23" />
    <option name="width" value="1440" />
    <option name="height" value="834" />
  </component>
  <component name="ProjectId" id="1cL2n9mFDUNdzKcwkMnqVHe6WpH" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag" />
      <recent name="main.java.samwilkins333.ScrabbleMini.Logic.Tiles" />
      <recent name="main.java.samwilkins333.ScrabbleMini.Logic.Players" />
      <recent name="main.java.samwilkins333.ScrabbleMini.Logic.Tiles.Initializer" />
      <recent name="main.java.samwilkins333.ScrabbleMini.Logic" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/java/samwilkins333/Main/UserInterface/FXMLControllers/FXMLRoots" />
      <recent name="$PROJECT_DIR$/src/main/java/samwilkins333/Main/UserInterface/FXMLControllers" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="ScrabbleMini" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="main.java.samwilkins333.ScrabbleMini.Main" />
      <module name="ScrabbleMini-FXML-Rework" />
      <option name="VM_PARAMETERS" value="--module-path /Library/Java/Extensions/javafx-sdk-11.0.2/lib/javafx.base.jar:/Library/Java/Extensions/javafx-sdk-11.0.2/lib/javafx.controls.jar:/Library/Java/Extensions/javafx-sdk-11.0.2/lib/javafx.graphics.jar:/Library/Java/Extensions/javafx-sdk-11.0.2/lib/javafx.fxml.jar --add-modules javafx.base,javafx.controls,javafx.graphics,javafx.fxml" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="main.java.samwilkins333.Main.Main" />
      <module name="ScrabbleMini-FXML-Rework" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="ServiceViewManager">
    <option name="viewStates">
      <list>
        <serviceView>
          <treeState>
            <expand />
            <select />
          </treeState>
        </serviceView>
      </list>
    </option>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ef97e08d-f3cf-4e22-a2fb-e25a1123c26c" name="Default Changelist" comment="" />
      <created>1557346860705</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1557346860705</updated>
      <workItem from="1557346862009" duration="110000" />
      <workItem from="1557347740133" duration="1484000" />
      <workItem from="1557359058475" duration="13324000" />
      <workItem from="1557439629151" duration="452000" />
      <workItem from="1557440107538" duration="363000" />
      <workItem from="1557507052546" duration="2080000" />
      <workItem from="1557905714576" duration="4790000" />
      <workItem from="1557930044474" duration="810000" />
      <workItem from="1557933490169" duration="1158000" />
      <workItem from="1557934735449" duration="1285000" />
      <workItem from="1557945960892" duration="242000" />
      <workItem from="1557948633033" duration="1806000" />
      <workItem from="1557954704619" duration="9918000" />
      <workItem from="1558158419120" duration="14802000" />
      <workItem from="1558306043473" duration="9375000" />
      <workItem from="1558377742347" duration="20375000" />
      <workItem from="1558412779494" duration="11768000" />
      <workItem from="1558467018893" duration="44216000" />
      <workItem from="1558582054369" duration="23341000" />
      <workItem from="1558679034688" duration="5522000" />
      <workItem from="1558684650220" duration="225000" />
      <workItem from="1558687713887" duration="6819000" />
      <workItem from="1558694806750" duration="6459000" />
      <workItem from="1558729474819" duration="389000" />
      <workItem from="1558730126400" duration="19161000" />
      <workItem from="1558767644944" duration="1908000" />
      <workItem from="1559342229419" duration="3491000" />
      <workItem from="1561930836406" duration="72000" />
      <workItem from="1562556930831" duration="399000" />
      <workItem from="1564415101164" duration="6000" />
      <workItem from="1590293718079" duration="108000" />
      <workItem from="1590390886827" duration="1248000" />
      <workItem from="1590436860271" duration="1652000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="WindowStateProjectService">
    <state x="195" y="58" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1590391032942">
      <screen x="0" y="23" width="1440" height="839" />
    </state>
    <state x="195" y="58" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.23.1440.839@0.23.1440.839" timestamp="1590391032942" />
    <state x="558" y="160" key="#com.intellij.openapi.roots.ui.configuration.libraryEditor.LibraryEditorDialog" timestamp="1590390901010">
      <screen x="0" y="23" width="1440" height="839" />
    </state>
    <state x="558" y="160" key="#com.intellij.openapi.roots.ui.configuration.libraryEditor.LibraryEditorDialog/0.23.1440.839@0.23.1440.839" timestamp="1590390901010" />
    <state width="1398" height="264" key="GridCell.Tab.0.bottom" timestamp="1590443413172">
      <screen x="0" y="23" width="1440" height="840" />
    </state>
    <state width="1398" height="217" key="GridCell.Tab.0.bottom/0.23.1440.839@0.23.1440.839" timestamp="1590443358714" />
    <state width="1398" height="264" key="GridCell.Tab.0.bottom/0.23.1440.840@0.23.1440.840" timestamp="1590443413172" />
    <state width="1398" height="264" key="GridCell.Tab.0.center" timestamp="1590443413171">
      <screen x="0" y="23" width="1440" height="840" />
    </state>
    <state width="1398" height="217" key="GridCell.Tab.0.center/0.23.1440.839@0.23.1440.839" timestamp="1590443358714" />
    <state width="1398" height="264" key="GridCell.Tab.0.center/0.23.1440.840@0.23.1440.840" timestamp="1590443413171" />
    <state width="1398" height="264" key="GridCell.Tab.0.left" timestamp="1590443413171">
      <screen x="0" y="23" width="1440" height="840" />
    </state>
    <state width="1398" height="217" key="GridCell.Tab.0.left/0.23.1440.839@0.23.1440.839" timestamp="1590443358713" />
    <state width="1398" height="264" key="GridCell.Tab.0.left/0.23.1440.840@0.23.1440.840" timestamp="1590443413171" />
    <state width="1398" height="264" key="GridCell.Tab.0.right" timestamp="1590443413171">
      <screen x="0" y="23" width="1440" height="840" />
    </state>
    <state width="1398" height="217" key="GridCell.Tab.0.right/0.23.1440.839@0.23.1440.839" timestamp="1590443358714" />
    <state width="1398" height="264" key="GridCell.Tab.0.right/0.23.1440.840@0.23.1440.840" timestamp="1590443413171" />
    <state width="1398" height="264" key="GridCell.Tab.1.bottom" timestamp="1590443413173">
      <screen x="0" y="23" width="1440" height="840" />
    </state>
    <state width="1398" height="264" key="GridCell.Tab.1.bottom/0.23.1440.839@0.23.1440.839" timestamp="1590443276328" />
    <state width="1398" height="264" key="GridCell.Tab.1.bottom/0.23.1440.840@0.23.1440.840" timestamp="1590443413173" />
    <state width="1398" height="264" key="GridCell.Tab.1.center" timestamp="1590443413172">
      <screen x="0" y="23" width="1440" height="840" />
    </state>
    <state width="1398" height="264" key="GridCell.Tab.1.center/0.23.1440.839@0.23.1440.839" timestamp="1590443276327" />
    <state width="1398" height="264" key="GridCell.Tab.1.center/0.23.1440.840@0.23.1440.840" timestamp="1590443413172" />
    <state width="1398" height="264" key="GridCell.Tab.1.left" timestamp="1590443413172">
      <screen x="0" y="23" width="1440" height="840" />
    </state>
    <state width="1398" height="264" key="GridCell.Tab.1.left/0.23.1440.839@0.23.1440.839" timestamp="1590443276327" />
    <state width="1398" height="264" key="GridCell.Tab.1.left/0.23.1440.840@0.23.1440.840" timestamp="1590443413172" />
    <state width="1398" height="264" key="GridCell.Tab.1.right" timestamp="1590443413173">
      <screen x="0" y="23" width="1440" height="840" />
    </state>
    <state width="1398" height="264" key="GridCell.Tab.1.right/0.23.1440.839@0.23.1440.839" timestamp="1590443276327" />
    <state width="1398" height="264" key="GridCell.Tab.1.right/0.23.1440.840@0.23.1440.840" timestamp="1590443413173" />
    <state x="208" y="24" key="SettingsEditor" timestamp="1590390922191">
      <screen x="0" y="23" width="1440" height="839" />
    </state>
    <state x="208" y="24" key="SettingsEditor/0.23.1440.839@0.23.1440.839" timestamp="1590390922191" />
    <state x="399" y="275" key="com.intellij.ide.util.TipDialog" timestamp="1590436859721">
      <screen x="0" y="23" width="1440" height="839" />
    </state>
    <state x="399" y="275" key="com.intellij.ide.util.TipDialog/0.23.1440.839@0.23.1440.839" timestamp="1590436859721" />
    <state x="386" y="199" width="667" height="486" key="find.popup" timestamp="1590392120784">
      <screen x="0" y="23" width="1440" height="840" />
    </state>
    <state x="386" y="199" width="667" height="486" key="find.popup/0.23.1440.840@0.23.1440.840" timestamp="1590392120784" />
    <state x="385" y="186" width="670" height="676" key="search.everywhere.popup" timestamp="1590442456393">
      <screen x="0" y="23" width="1440" height="839" />
    </state>
    <state x="385" y="186" width="670" height="676" key="search.everywhere.popup/0.23.1440.839@0.23.1440.839" timestamp="1590442456393" />
    <state x="385" y="186" width="670" height="677" key="search.everywhere.popup/0.23.1440.840@0.23.1440.840" timestamp="1590392281405" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/samwilkins333/ScrabbleMini/Logic/GameAgents/Referee/Referee.java</url>
          <line>101</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/ScrabbleMini_FXML_Rework$ScrabbleMini.ic" NAME="ScrabbleMini Coverage Results" MODIFIED="1557862249604" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateCodeFragment">
      <expression>
        <expression-string>gaddag.contains(&quot;dabled&quot;)</expression-string>
        <language-id>JAVA</language-id>
        <custom-info>main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Arc,java.util.stream.Collectors,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.State,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.ArcLetter,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Delimiter</custom-info>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>gaddag.contains(&quot;cable&quot;)</expression-string>
        <language-id>JAVA</language-id>
        <custom-info>main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Arc,java.util.stream.Collectors,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.State,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.ArcLetter,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Delimiter</custom-info>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>gaddag.contains(&quot;cabled&quot;)</expression-string>
        <language-id>JAVA</language-id>
        <custom-info>main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Arc,java.util.stream.Collectors,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.State,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.ArcLetter,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Delimiter</custom-info>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Arc arc = gaddag.getRootArc().destination().outgoingArcs.entrySet().iterator().next().getValue();
while (arc.destination() != null) {
  String concat = arc.letters().stream().map(Letter::raw).collect(Collectors.joining());
  System.out.println(concat.isEmpty() ? &quot;EMPTY SET&quot; : concat);
  Iterator&lt;Map.Entry&lt;ArcLetter, Arc&gt;&gt; iterator = arc.destination.outgoingArcs.entrySet().iterator();
  if (!iterator.hasNext()) break;
  Map.Entry&lt;ArcLetter, Arc&gt; entry = iterator.next();
  System.out.printf(&quot;Following %s\n&quot;, entry.getKey() instanceof Delimiter ? &quot;&lt;&gt;&quot; : entry.getKey().letter.raw());
  arc = entry.getValue();
}</expression-string>
        <language-id>JAVA</language-id>
        <custom-info>main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Arc,java.util.stream.Collectors,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.State,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.ArcLetter,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Delimiter</custom-info>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Arc arc = gaddag.getRootArc().destination().outgoingArcs.entrySet().iterator().next().getValue();
while (arc.destination() != null) {
  String concat = arc.letters().stream().map(Letter::raw).collect(Collectors.joining());
  System.out.println(concat.isEmpty() ? &quot;EMPTY SET&quot; : concat);
  Iterator&lt;Map.Entry&lt;ArcLetter, Arc&gt;&gt; iterator = arc.destination.outgoingArcs.entrySet().iterator();
  if (!iterator.hasNext()) break; 
  Map.Entry&lt;ArcLetter, Arc&gt; entry = iterator.next();
  System.out.printf(&quot;  Following %s\n&quot;, entry.getKey() instanceof Delimiter ? &quot;&lt;&gt;&quot; : entry.getKey().letter.raw());
  arc = entry.getValue();
}</expression-string>
        <language-id>JAVA</language-id>
        <custom-info>main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Arc,java.util.stream.Collectors,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.State,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.ArcLetter,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Delimiter</custom-info>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Arc arc = gaddag.getRootArc().destination().outgoingArcs.entrySet().iterator().next().getValue();
while (arc.destination() != null) {
  String concat = arc.letters().stream().map(Letter::raw).collect(Collectors.joining());
  System.out.println(concat.isEmpty() ? &quot;EMPTY SET&quot; : concat);
  Iterator&lt;Map.Entry&lt;ArcLetter, Arc&gt;&gt; iterator = arc.destination.outgoingArcs.entrySet().iterator();
  if (!iterator.hasNext()) break; 
  Map.Entry&lt;ArcLetter, Arc&gt; entry = iterator.next();
  System.out.printf(&quot;Following %s\n&quot;, entry.getKey() instanceof Delimiter ? &quot;&lt;&gt;&quot; : entry.getKey().letter.raw());
  arc = entry.getValue();
}</expression-string>
        <language-id>JAVA</language-id>
        <custom-info>main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Arc,java.util.stream.Collectors,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.State,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.ArcLetter,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Delimiter</custom-info>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Arc arc = gaddag.getRootArc().destination().outgoingArcs.entrySet().iterator().next().getValue();
while (arc.destination() != null) {
  System.out.println(arc.letters().stream().map(Letter::raw).collect(Collectors.joining()));
  Iterator&lt;Map.Entry&lt;ArcLetter, Arc&gt;&gt; iterator = arc.destination.outgoingArcs.entrySet().iterator();
  if (!iterator.hasNext()) break; 
  Map.Entry&lt;ArcLetter, Arc&gt; entry = iterator.next();
  System.out.printf(&quot;Following %s\n&quot;, entry.getKey() instanceof Delimiter ? &quot;&lt;&gt;&quot; : entry.getKey().letter.raw());
  arc = entry.getValue();
}</expression-string>
        <language-id>JAVA</language-id>
        <custom-info>main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Arc,java.util.stream.Collectors,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.State,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.ArcLetter,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Delimiter</custom-info>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Arc arc = gaddag.getRootArc().destination().outgoingArcs.entrySet().iterator().next().getValue();
while (arc.destination() != null) {
  System.out.println(arc.letters().stream().map(Letter::raw).collect(Collectors.joining()));
  Iterator&lt;Map.Entry&lt;ArcLetter, Arc&gt;&gt; iterator = arc.destination.outgoingArcs.entrySet().iterator();
  if (!iterator.hasNext()) break; 
  Map.Entry&lt;ArcLetter, Arc&gt; entry = iterator.next();
  if (entry.getKey() == null) {
    System.out.println(&quot;NULL&quot;);
    continue;
  }
  System.out.printf(&quot;Following %s\n&quot;, entry.getKey().letter.raw());
  arc = entry.getValue();
}</expression-string>
        <language-id>JAVA</language-id>
        <custom-info>main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Arc,java.util.stream.Collectors,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.State,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.ArcLetter</custom-info>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Arc arc = gaddag.getRootArc().destination().outgoingArcs.entrySet().iterator().next().getValue();
while (arc.destination() != null) {
  System.out.println(arc.letters().stream().map(Letter::raw).collect(Collectors.joining()));
  Iterator&lt;Map.Entry&lt;ArcLetter, Arc&gt;&gt; iterator = arc.destination.outgoingArcs.entrySet().iterator();
  if (!iterator.hasNext()) break; 
  Map.Entry&lt;ArcLetter, Arc&gt; entry = iterator.next();
  System.out.printf(&quot;Following %s\n&quot;, entry.getKey().letter.raw());
  arc = entry.getValue();
}</expression-string>
        <language-id>JAVA</language-id>
        <custom-info>main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.Arc,java.util.stream.Collectors,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.State,main.java.samwilkins333.ScrabbleMini.Logic.DataStructures.Gaddag.ArcLetter</custom-info>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
    </expressions>
    <expressions id="breakpointCondition">
      <expression>
        <expression-string>letter == null</expression-string>
        <language-id>JAVA</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>o == null || letter == null</expression-string>
        <language-id>JAVA</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>o == null</expression-string>
        <language-id>JAVA</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>letter instanceof Delimiter</expression-string>
        <language-id>JAVA</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>letter.letter() == null</expression-string>
        <language-id>JAVA</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>letter.letter.letter.equals(&quot;a&quot;)</expression-string>
        <language-id>JAVA</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>resource == null</expression-string>
        <language-id>JAVA</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>resou</expression-string>
        <language-id>JAVA</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
</project>